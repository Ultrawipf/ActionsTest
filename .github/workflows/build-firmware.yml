name: Build OpenFFBoard firmware

# Controls when the workflow will run
on:
  push:
    branches: 
      - master
      - development
  pull_request:
    branches:
      - master
      - development

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build firmware
  Build_firmware:
    strategy:
        fail-fast: false
        matrix:
          target: ['F411RE', 'F407VG'] # Targets to build

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # - run: mkdir -p /tmp/armtc # make temp directory

      # # Setup toolchain
      # - uses: actions/cache@v2
      #   id: cache
      #   with:
      #     path: /tmp/armtc
      #     key: 'gcc-arm-none-eabi-10.3-2021.10-x86_64-linux'

      # - name: Download toolchain
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: wget -q -O /tmp/armtc/gcc-arm-none-eabi.tar.bz2 https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2 
        
      # - name: Setup environment
      #   run: | 
      #     sudo tar xjf /tmp/armtc/gcc-arm-none-eabi.tar.bz2 -C /usr/share/
      #     sudo ln -s /usr/share/gcc-arm-none-eabi-10.3-2021.10/bin/* /usr/bin/

      # - name: Build ${{ matrix.target }}
      #   run: |
      #     make -C ./Firmware clean
      #     make -j16 -C ./Firmware MCU_TARGET=${{ matrix.target }} OUTPUT_DIR=Output
      - {uses: ./.github/actions/build-firmware, with: {target: '${{ matrix.target }}', path: 'Output'}}
      - uses: actions/upload-artifact@v2
        with:
          name: OpenFFBoard-Firmware-${{ matrix.target }}
          path: ./Firmware/Output
